name: Create release and upload artifact

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        description: 'Version to release (ex input. 1.2.3)'

permissions:
  contents: write

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check version
        shell: bash
        run: |
          pattern="[0-9]+\.[0-9]+\.[0-9]+"
          [[ ${{ inputs.version }} ]] || { echo "input version is empty" ; exit 1; }
          [[ ${{ inputs.version }} =~ $pattern ]] || { echo "input version should be like '1.2.3'" ; exit 1; }
      - name: Check default branch
        if: always()
        shell: bash
        run: |
          ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }} || { echo "not default branch" ; exit 1; }

  build:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Set github-actions bot config
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Set version in package.json and manifest.json
        run: |
          sed -i 's/"version": "[^"]*"/"version": "${{ inputs.version }}"/g' package.json src/static/manifest.json
          git add .
          git commit -m "Prepare release ${{ inputs.version }}"
          git tag v${{ inputs.version }}
          git push --atomic origin HEAD v${{ inputs.version }}

      - run: pnpm build
      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r v${{ inputs.version }}.zip dist

      - uses: softprops/action-gh-release@v1
        with:
          name: v${{ inputs.version }}
          files: |
            LICENSE
            v${{ inputs.version }}.zip
          draft: true
          tag_name: v${{ inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
